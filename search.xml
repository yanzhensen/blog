<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>maven-unrecognized</title>
      <link href="/blog/2022/07/11/maven-unrecognized/"/>
      <url>/blog/2022/07/11/maven-unrecognized/</url>
      
        <content type="html"><![CDATA[<h1 id="maven无法识别本地jar"><a href="#maven无法识别本地jar" class="headerlink" title="maven无法识别本地jar"></a>maven无法识别本地jar</h1><p>以前用的私服，现在不使用了，更改了maven 的 setting 设置，导致本地有jar但是maven无法引入；</p><p>可以先执行第三条，不行再执行其他的</p><h2 id="1-注意事项和位置"><a href="#1-注意事项和位置" class="headerlink" title="1.注意事项和位置"></a>1.注意事项和位置</h2><p>创建bat 文件</p><ul><li><code>.bat文件要和仓库在同一平级目录</code></li><li><code>REPOSITORY_PATH要改成你自己仓库的地址</code></li></ul><h2 id="2、删除-lastUpdated文件-失败的jar包"><a href="#2、删除-lastUpdated文件-失败的jar包" class="headerlink" title="2、删除.lastUpdated文件(失败的jar包)"></a>2、删除.lastUpdated文件(失败的jar包)</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">set</span> <span class="token assign-left variable">REPOSITORY_PATH</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>maven<span class="token punctuation">\</span>repository<span class="token keyword">for</span> /f <span class="token string">"delims="</span> %%i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'dir /b /s "%REPOSITORY_PATH%\*lastUpdated*"'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>    del /s /q %%i<span class="token punctuation">)</span>pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、删除-remote-repositories文件（主要）"><a href="#3、删除-remote-repositories文件（主要）" class="headerlink" title="3、删除_remote.repositories文件（主要）"></a>3、删除_remote.repositories文件（主要）</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">set</span> <span class="token assign-left variable">REPOSITORY_PATH</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>maven<span class="token punctuation">\</span>repositoryrem 正在搜索<span class="token punctuation">..</span>.<span class="token keyword">for</span> /f <span class="token string">"delims="</span> %%i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'dir /b /s "%REPOSITORY_PATH%\*_remote.repositories*"'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>    del /s /q %%i<span class="token punctuation">)</span>rem 搜索完毕pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、删除-maven-repositories文件-没影响可留"><a href="#4、删除-maven-repositories文件-没影响可留" class="headerlink" title="4、删除_maven.repositories文件(没影响可留)"></a>4、删除_maven.repositories文件(没影响可留)</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">set</span> <span class="token assign-left variable">REPOSITORY_PATH</span><span class="token operator">=</span>D:<span class="token punctuation">\</span>maven<span class="token punctuation">\</span>repositoryrem 正在搜索<span class="token punctuation">..</span>.<span class="token keyword">for</span> /f <span class="token string">"delims="</span> %%i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token string">'dir /b /s "%REPOSITORY_PATH%\*_maven.repositories*"'</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>    del /s /q %%i<span class="token punctuation">)</span>rem 搜索完毕pause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>yum安装mysql8</title>
      <link href="/blog/2022/04/28/yum%E5%AE%89%E8%A3%85mysql8/"/>
      <url>/blog/2022/04/28/yum%E5%AE%89%E8%A3%85mysql8/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos8-yum-安装mysql8"><a href="#Centos8-yum-安装mysql8" class="headerlink" title="Centos8 yum 安装mysql8"></a>Centos8 yum 安装mysql8</h1><h2 id="yum-安装mysql8"><a href="#yum-安装mysql8" class="headerlink" title="yum 安装mysql8"></a>yum 安装mysql8</h2><ol><li><p>获取官方下载地址 <a href="https://dev.mysql.com/downloads/repo/yum/">https://dev.mysql.com/downloads/repo/yum/</a></p></li><li><p>下载mysql安装包 ：wget <a href="https://repo.mysql.com//mysql80-community-release-el8-1.noarch.rpm">https://repo.mysql.com//mysql80-community-release-el8-1.noarch.rpm</a></p></li><li><p>将下载好的安装包挂载到本地 找个路径放 cd /home/package<br>yum localinstall mysql80-community-release-el8-1.noarch.rpm</p></li><li><p>查看是否挂载成功<br>yum repolist enabled | grep “mysql.<em>-community.</em>“</p></li><li><p>禁用centos8.0自带的mysql模块<br>yum module disable mysql</p></li><li><p>安装mysql：yum install mysql-community-server</p></li><li><p>启动mysql服务<br>systemctl mysqld start</p></li><li><p>查看mysql服务启动状态<br>systemctl mysqld status</p></li><li><p>查看mysql安装时生成的随机密码<br>grep ‘temporary password’ /var/log/mysqld.log</p></li><li><p>登录mysql<br>mysql -uroot -p’刚获取到的随机密码’</p></li><li><p>修改登录密码<br>ALTER USER ‘root’ @’localhost’ IDENTIFIED BY ‘您的密码’;<br>出现这个问题，表示密码过于简单<br>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements</p></li><li><p>开放mysql远程访问<br>创建权限记录：<br>CREATE user ‘root‘@’%’ IDENTIFIED BY ‘您的密码’;<br>授权：<br>GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root’ @’%’ WITH GRANT OPTION;<br>修改密码过期策略：<br>ALTER USER ‘root’ @’localhost’ IDENTIFIED BY ‘您的密码’ PASSWORD EXPIRE NEVER;<br>重新修改密码：<br>ALTER USER ‘root’ @’%’ IDENTIFIED WITH mysql_native_password BY ‘您的密码’;<br>刷新权限：<br>FLUSH PRIVILEGES;</p></li></ol><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><p>mysql服务相关命令<br>启动服务：service mysqld start<br>停止服务：service mysqld stop<br>重启服务：service mysqld restart<br>查看服务状态：service mysqld status</p><p>设置mysql开机自启：<br>systemctl enable mysqld<br>systemctl daemon-reload<br>查看自启服务<br>systemctl list-units –type=service</p>]]></content>
      
      
      
        <tags>
            
            <tag> 安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>poi-tl word模板填充</title>
      <link href="/blog/2022/04/28/poi-tl-word%E6%A8%A1%E6%9D%BF%E5%A1%AB%E5%85%85/"/>
      <url>/blog/2022/04/28/poi-tl-word%E6%A8%A1%E6%9D%BF%E5%A1%AB%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font color=#999AAA >java poi-tl word模板填充，word填充基于com.deepoove 的 poi-tl</font><h2 id="一、引入maven库"><a href="#一、引入maven库" class="headerlink" title="一、引入maven库"></a>一、引入maven库</h2><p>注意：版本对应 poi-tl 版本 1.9.0-beta 对应 apache poi 版本 4.1.2</p><p><font color=#999AAA >代码如下（示例）：</font></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>word模板数据解析<span class="token operator">--</span><span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span>    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>com<span class="token punctuation">.</span>deepoove<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>poi<span class="token operator">-</span>tl<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">></span></span><span class="token number">1.9</span><span class="token number">.0</span><span class="token operator">-</span>beta<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、读入数据"><a href="#二、读入数据" class="headerlink" title="二、读入数据"></a>二、读入数据</h2><p>默认采用${key}的形式进行填充！<br>原word模板：<br><img src="cgd-1.png" alt="模板图"><br>效果图：<br><img src="cgd-2.png" alt="效果图"></p><h2 id="三、示例代码"><a href="#三、示例代码" class="headerlink" title="三、示例代码"></a>三、示例代码</h2><p><font color=#999AAA >代码如下（示例）：</font></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>    <span class="token function">resolveTemp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">File</span> <span class="token function">resolveTemp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> path <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"user.dir"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/file"</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> datas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"dept"</span><span class="token punctuation">,</span> <span class="token string">"采购部"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">LocalDate</span> date <span class="token operator">=</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"year"</span><span class="token punctuation">,</span> date<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"month"</span><span class="token punctuation">,</span> date<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"day"</span><span class="token punctuation">,</span> date<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span><span class="token punctuation">></span></span> itemList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> itemMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"goods"</span><span class="token punctuation">,</span> <span class="token string">"笔记本电脑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"num"</span><span class="token punctuation">,</span> <span class="token string">"2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"cost"</span><span class="token punctuation">,</span> <span class="token string">"10000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"remark"</span><span class="token punctuation">,</span> <span class="token string">"按需采购"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>itemMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"goods"</span><span class="token punctuation">,</span> <span class="token string">"台式电脑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"num"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"cost"</span><span class="token punctuation">,</span> <span class="token string">"8000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"remark"</span><span class="token punctuation">,</span> <span class="token string">"按需采购"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    itemList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>itemMap<span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"item"</span><span class="token punctuation">,</span> itemList<span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"total"</span><span class="token punctuation">,</span> <span class="token string">"18000.00"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//读取图片</span>    <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path <span class="token operator">+</span> <span class="token string">"/1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">BufferedImage</span> bi <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> width <span class="token operator">=</span> bi<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//源图高度</span>    <span class="token keyword">int</span> height <span class="token operator">=</span> bi<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    datas<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PictureRenderData</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token class-name">PictureType</span><span class="token punctuation">.</span>PNG<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"datas = "</span> <span class="token operator">+</span> datas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">HackLoopTableRenderPolicy</span> hackLoopTableRenderPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HackLoopTableRenderPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Configure</span> config <span class="token operator">=</span> <span class="token class-name">Configure</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">buildGramer</span><span class="token punctuation">(</span><span class="token string">"$&#123;"</span><span class="token punctuation">,</span> <span class="token string">"&#125;"</span><span class="token punctuation">)</span><span class="token comment">//此处可以变更原模板$&#123;&#125;</span>            <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string">"item"</span><span class="token punctuation">,</span> hackLoopTableRenderPolicy<span class="token punctuation">)</span><span class="token comment">//标记表格参数</span>            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> sourceFile <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">"/template/采购单.docx"</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> docNow <span class="token operator">=</span> <span class="token class-name">LocalDateTimeUtils</span><span class="token punctuation">.</span><span class="token function">formatDate</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token string">"yyyy年MM月dd日"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> targetFile <span class="token operator">=</span> path <span class="token operator">+</span> <span class="token string">"/order/采购单"</span> <span class="token operator">+</span> docNow <span class="token operator">+</span> <span class="token string">".docx"</span><span class="token punctuation">;</span>    <span class="token class-name">XWPFTemplate</span> template <span class="token operator">=</span> <span class="token class-name">XWPFTemplate</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>sourceFile<span class="token punctuation">)</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">File</span> wordFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>targetFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">File</span> parentFile <span class="token operator">=</span> wordFile<span class="token punctuation">.</span><span class="token function">getParentFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>parentFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        parentFile<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">FileOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>wordFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    template<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>    out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    template<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> wordFile<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><font color=#999AAA >以上就是今天要讲的内容，本文仅仅简单介绍了poi-tl的使用，喜欢就点个赞吧！</font></p>]]></content>
      
      
      
        <tags>
            
            <tag> utils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/blog/2022/04/24/hello-world/"/>
      <url>/blog/2022/04/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客</title>
      <link href="/blog/2022/02/15/hexo-init/"/>
      <url>/blog/2022/02/15/hexo-init/</url>
      
        <content type="html"><![CDATA[<p> Hexo 是快速、简洁且高效的博客框架</p><blockquote><p>Hexo官网:<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p></blockquote><h2 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h2><p> 1.安装Git<br> 2.安装Node.js<br> 3.安装Hexo<br> 4.Gitee创建个人仓库</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><h3 id="1-GIT"><a href="#1-GIT" class="headerlink" title="1.GIT"></a>1.GIT</h3><blockquote><p>Git下载地址:<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>Git安装教程 :<a href="https://blog.csdn.net/sishen47k/article/details/80211002">https://blog.csdn.net/sishen47k/article/details/80211002</a></p></blockquote><h3 id="2-Node-js"><a href="#2-Node-js" class="headerlink" title="2.Node.js"></a>2.Node.js</h3><blockquote><p>Node.js下载地址:<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>Node.js安装教程:<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">https://www.runoob.com/nodejs/nodejs-install-setup.html</a></p></blockquote><h3 id="2-Hexo"><a href="#2-Hexo" class="headerlink" title="2.Hexo"></a>2.Hexo</h3><ul><li><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><blockquote><p>npm install -g hexo-cli</p></blockquote></li><li><p>安装hexo-deployer-git，跟git交互</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote></li><li><p>创建一个文件夹hexo</p><blockquote><p>mkdir hexo</p></blockquote></li><li><p>进入hexo</p><blockquote><p>cd hexo</p></blockquote></li><li><p>初始化一下hexo</p><blockquote><p>hexo init</p></blockquote></li><li><p>安装依赖</p><blockquote><p>npm install</p></blockquote></li><li><p>配置认证信息</p><blockquote><p>hexo d -fg</p></blockquote></li><li><p>开始部署 博客推到远端</p><blockquote><p>hexo g -d</p></blockquote></li><li><p>启动服务</p><blockquote><p>hexo serve</p></blockquote></li><li><p>文件夹出现的名称</p></li></ul><table><thead><tr><th align="left">文件名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">node_modules</td><td align="left">依赖包</td></tr><tr><td align="left">public</td><td align="left">存放生成的页面</td></tr><tr><td align="left">scaffolds</td><td align="left">生成文章的一些模板</td></tr><tr><td align="left">source</td><td align="left">用来存放你的文章</td></tr><tr><td align="left">themes</td><td align="left">主题</td></tr><tr><td align="left">_config.yml</td><td align="left">博客的配置文件</td></tr></tbody></table><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><ul><li>模板使用：<a href="https://gitee.com/mirrors_blinkfox/hexo-theme-matery.git">https://gitee.com/mirrors_blinkfox/hexo-theme-matery.git</a> </li><li>安装到themes目录下<blockquote><p>cd themes<br>git clone <a href="https://gitee.com/mirrors_blinkfox/hexo-theme-matery.git">https://gitee.com/mirrors_blinkfox/hexo-theme-matery.git</a></p></blockquote></li><li>修改 Hexo 根目录下的 _config.yml 的 theme 的值：theme: hexo-theme-matery</li></ul><p>安装完后即可用<code><strong>hexo s</strong></code>在本地启动，然后访问<code><strong>localhost:4000</strong></code>查看你的博客了</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
